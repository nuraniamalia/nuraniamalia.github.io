{"version":3,"sources":["repository/index.ts","contexts/PokemonContext.tsx","config.tsx","components/OverlayLoading.tsx","components/BottomNavigation.tsx","components/AsyncComponent.tsx","routes.tsx","App.tsx","index.tsx","contexts/MainRouterContext.tsx","contexts/SnackbarContext.tsx","utils.tsx","contexts/OverlayLoadingContext.tsx","contexts/MyPokemonContext.tsx","contexts/ServiceWorkerContext.tsx","components/MDIcon.tsx","contexts/WindowStackContext.tsx"],"names":["fetchPokemons","a","offset","limit","Axios","get","fetchPokemon","name","defaultValue","pokemons","pokemon","isFetchingPokemon","isFetchingPokemons","hasNext","PokemonContext","React","createContext","PokemonStore","props","state","setStateAsync","getPokemonFromLocal","pokemonFromLocal","data","pokemonResult","image_url","generateImageUrlById","id","abilities","species","types","moves","setPokemonToLocal","console","log","getPokemonsMapFromLocal","pokemonsMap","setPokemonsMapToLocal","localforage","getItem","LOCAL_POKEMON_MAP_URI","newMap","setItem","results","next","pokemonsResult","map","d","generateImageUrlByUrl","url","resetAndFetch","resetPokemon","Promise","resolve","setState","firstState","i","Provider","value","this","children","Component","BASE_URL","IMAGE_URL","COLORS","primary","secondary","clouds","background","APP_INSTALL_STATUS_URI","LOCAL_MY_POKEMONS_URI","StyledOverlayLoading","styled","div","OverlayLoading","useContext","OverlayLoadingContext","isOpened","data-testid","className","CircularProgress","StyledBottomNavigation","BottomNavigation","Container","withRouter","history","MainRouterContext","selectedPath","updateRouter","Fragment","onChange","e","path","push","BottomNavigationAction","label","icon","PageLoading","generateAsyncComponent","loader","load","ResolvedComponent","default","AsyncComponent","useState","Comp","setComponent","loading","setLoading","snackbarContext","SnackbarContext","useEffect","show","severity","fetchComponent","LinearProgress","Pokemons","MyPokemons","PokemonDetails","Routers","component","PATHS","POKEMONS","routes","MY_POKEMONS","from","to","Alert","elevation","variant","axios","defaults","baseURL","headers","App","autoHideDuration","message","close","fetchMyPokemons","MyPokemonContext","renderRoutes","Snackbar","open","onClose","style","bottom","action","IconButton","aria-label","color","onClick","MDIcon","MUITheme","createMuiTheme","palette","main","link","InMemoryCache","createHttpLink","uri","client","ApolloClient","cache","generateAppComponent","ApolloProvider","theme","window","stringProps","document","getElementById","dataset","serverProps","undefined","parsedProps","JSON","parse","err","ensureReady","then","ReactDOM","hydrate","renderOnServer","location","context","DEFAULT_ROUTERS","outline","selectedRoute","containerPose","routers","MainRouterStore","route","find","v","checkAndUpdateRouter","pathname","indexOf","SnackbarStore","withSnackbar","Consumer","splittedUrl","split","length","utils","calculateCatchPokemon","Math","random","convertDashedToReadable","dashedString","replace","routeConfig","matches","matchRoutes","all","match","asyncComponent","OverlayLoadingStore","hide","withOverlayLoading","overlayLoadingContext","myPokemons","isCalculatingCatch","timeoutId","MyPokemonStoreClass","catchPokemon","pokemonListItem","setTimeout","getMyPokemonsFromLocal","isOwned","nickname","newMyPokemons","clearCatchTimeout","clearTimeout","clearPokemons","isFetchingMyPokemons","updateNickname","release","splice","MyPokemonStore","shouldUpdate","countDown","intervalId","isNotificationAllowed","appInstallationStatus","isInstallPromptUIShowed","ServiceWorkerContext","ServiceWorkerStore","deferredAppInstallPrompt","updateServiceWorker","refreshPage","navigator","serviceWorker","getRegistration","reg","unregister","reload","checkAppInstalledStatus","addEventListener","preventDefault","status","localStorage","showAppInstallPrompt","prompt","userChoice","choiceResult","outcome","rejectAppInstall","Icon","span","windows","WindowStackContext","WindowStackStore","slice","pop","popById","reset","isAtTop","isWindowActive"],"mappings":"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","file":"static/js/main.e593a7be.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nexport const fetchPokemons = async (offset: number = 0, limit: number = 10) => {\r\n  return await Axios.get (`/pokemon?offset=${offset}&limit=${limit}`);\r\n};\r\n\r\nexport const fetchPokemon = async (name: string) => {\r\n  return await Axios.get(`/pokemon/${name}`);\r\n};\r\n","import React, { Component } from 'react';\r\nimport { generateImageUrlById, generateImageUrlByUrl } from '../utils';\r\nimport localforage from 'localforage';\r\nimport { LOCAL_POKEMON_MAP_URI } from '../config';\r\nimport { fetchPokemons, fetchPokemon } from '../repository';\r\n\r\nexport type Ability = {\r\n  ability: {\r\n    name: string;\r\n  };\r\n};\r\n\r\nexport type Move = {\r\n  move: {\r\n    name: string;\r\n  };\r\n};\r\n\r\nexport type Type = {\r\n  slot: number;\r\n  type: {\r\n    name: string;\r\n  };\r\n};\r\n\r\nexport type Pokemon = {\r\n  name: string;\r\n  species: {\r\n    name: string;\r\n  };\r\n  image_url: string;\r\n  abilities: Ability[];\r\n  types: Type[];\r\n  moves: Move[];\r\n};\r\n\r\nexport interface PokemonsMap {\r\n  [name: string]: Pokemon;\r\n}\r\n\r\nexport type PokemonListItem = {\r\n  name: string;\r\n  image_url: string;\r\n};\r\n\r\ninterface Actions {\r\n  fetchPokemons?: () => void;\r\n  fetchPokemon?: (name: string) => void;\r\n  next?: () => void;\r\n  resetAndFetch?: () => void;\r\n  resetPokemon?: () => void;\r\n}\r\n\r\ninterface DefaultValue extends Actions {\r\n  pokemons: PokemonListItem[];\r\n  isFetchingPokemons: boolean;\r\n  pokemon: Pokemon | null;\r\n  isFetchingPokemon: boolean;\r\n  offset: number;\r\n  limit: number;\r\n  hasNext: boolean;\r\n}\r\n\r\ntype PokemonProps = {\r\n  pokemons?: PokemonListItem[];\r\n  pokemon?: Pokemon;\r\n};\r\n\r\nexport const defaultValue: DefaultValue = {\r\n  pokemons: [],\r\n  pokemon: null,\r\n  isFetchingPokemon: false,\r\n  isFetchingPokemons: false,\r\n  offset: 0,\r\n  limit: 20,\r\n  hasNext: false,\r\n};\r\n\r\nexport const PokemonContext = React.createContext(defaultValue);\r\n\r\n\r\nexport class PokemonStore extends Component<PokemonProps, DefaultValue>\r\n  implements Actions {\r\n  state = defaultValue;\r\n    \r\n  constructor(props: PokemonProps | Readonly<PokemonProps>) {\r\n    super(props);\r\n\r\n    const firstState = defaultValue;\r\n    console.log(firstState)\r\n    for (const i in props) {\r\n      // if (props[i]) firstState[i] = props[i];\r\n    }\r\n\r\n    this.state = firstState;\r\n  }\r\n\r\n  fetchPokemon = async (name: string) => {\r\n    try {\r\n      await this.setStateAsync({ isFetchingPokemon: true });\r\n      const pokemonFromLocal = await this.getPokemonFromLocal(name);\r\n\r\n      if (pokemonFromLocal) {\r\n        await this.setStateAsync({\r\n          pokemon: pokemonFromLocal,\r\n        });\r\n      }\r\n\r\n      const { data } = await fetchPokemon(name);\r\n\r\n      if (data) {\r\n        const pokemonResult: Pokemon = {\r\n          name: data.name,\r\n          image_url: generateImageUrlById(data.id),\r\n          abilities: data.abilities,\r\n          species: data.species,\r\n          types: data.types,\r\n          moves: data.moves,\r\n        };\r\n\r\n        this.setStateAsync({ pokemon: { ...pokemonResult } });\r\n        this.setPokemonToLocal(pokemonResult);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      await this.setStateAsync({ isFetchingPokemon: false });\r\n    }\r\n  };\r\n\r\n  getPokemonFromLocal = async (name: string) => {\r\n    const pokemonsMap = await this.getPokemonsMapFromLocal();\r\n    if (pokemonsMap) {\r\n      return pokemonsMap[name];\r\n    }\r\n  };\r\n\r\n  setPokemonToLocal = async (pokemon: Pokemon) => {\r\n    const pokemonsMap: PokemonsMap = await this.getPokemonsMapFromLocal();\r\n    pokemonsMap[pokemon.name] = pokemon;\r\n    this.setPokemonsMapToLocal(pokemonsMap);\r\n  };\r\n\r\n  getPokemonsMapFromLocal = async () => {\r\n    const pokemonsMap: PokemonsMap | null = await localforage.getItem(\r\n      LOCAL_POKEMON_MAP_URI\r\n    );\r\n    if (pokemonsMap) return pokemonsMap;\r\n    const newMap = {};\r\n    await localforage.setItem(LOCAL_POKEMON_MAP_URI, newMap);\r\n    return newMap;\r\n  };\r\n\r\n  setPokemonsMapToLocal = async (pokemonsMap: PokemonsMap) => {\r\n    await localforage.setItem(LOCAL_POKEMON_MAP_URI, pokemonsMap);\r\n  };\r\n\r\n  fetchPokemons = async () => {\r\n    try {\r\n      await this.setStateAsync({ isFetchingPokemons: true });\r\n      const { offset, limit } = this.state;\r\n\r\n      const {\r\n        data: { results, next },\r\n      } = await fetchPokemons(offset, limit);\r\n     \r\n      if (results) {\r\n        const pokemonsResult: PokemonListItem[] = results.map((d: any) => {\r\n          const pokemon: PokemonListItem = {\r\n            name: d.name,\r\n            image_url: generateImageUrlByUrl(d.url),\r\n          };\r\n          return pokemon;\r\n        });\r\n\r\n        this.setStateAsync({\r\n          pokemons: [...this.state.pokemons, ...pokemonsResult],\r\n          hasNext: !!next,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      await this.setStateAsync({ isFetchingPokemons: false });\r\n    }\r\n  };\r\n\r\n  next = async () => {\r\n    const { offset, limit, hasNext } = this.state;\r\n\r\n    if (hasNext) {\r\n      await this.setStateAsync({ offset: offset + limit });\r\n      await this.fetchPokemons();\r\n    }\r\n  };\r\n\r\n  resetAndFetch = async () => {\r\n    await this.setStateAsync({ offset: 0, pokemons: [] });\r\n    await this.fetchPokemons();\r\n  };\r\n\r\n  resetPokemon = async () => {\r\n    await this.setStateAsync({\r\n      pokemon: null,\r\n    });\r\n  };\r\n\r\n  setStateAsync = (state: any): Promise<DefaultValue> => {\r\n    return new Promise(resolve => {\r\n      this.setState(state, () => resolve(state));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <PokemonContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          fetchPokemon: this.fetchPokemon,\r\n          fetchPokemons: this.fetchPokemons,\r\n          next: this.next,\r\n          resetAndFetch: this.resetAndFetch,\r\n          resetPokemon: this.resetPokemon,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </PokemonContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const withPokemon = (Comp: any) => (props: any) => (\r\n  <PokemonContext.Consumer>\r\n    {pokemonContext => <Comp {...props} pokemonContext={pokemonContext} />}\r\n  </PokemonContext.Consumer>\r\n);\r\n","export const BASE_URL: string = 'https://pokeapi.co/api/v2';\r\nexport const IMAGE_URL: string = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon';\r\n\r\nexport const COLORS = {\r\n  primary: '#3498db',\r\n  secondary: '#e74c3c',\r\n  clouds: '#ecf0f1',\r\n  background: '#f6f7f9',\r\n};\r\n\r\nexport const APP_INSTALL_STATUS_URI: string = 'pokemonyay';\r\nexport const LOCAL_POKEMON_MAP_URI: string = 'pokemonmap';\r\nexport const LOCAL_MY_POKEMONS_URI: string = 'mypokemonmap';","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { OverlayLoadingContext } from '../contexts/OverlayLoadingContext';\r\n\r\nconst StyledOverlayLoading = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 1000000;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n\r\n  .overlay-loading-2 {\r\n    padding: 20px 30px;\r\n    border-radius: 20px;\r\n    background: white;\r\n    overflow: hidden;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: 300;\r\n    font-size: 17pt;\r\n\r\n    .wrapper {\r\n      width: 50px;\r\n      height: 50px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst OverlayLoading = () => {\r\n  const { isOpened } = React.useContext(OverlayLoadingContext);\r\n\r\n  if (!isOpened) return <div></div>;\r\n\r\n  return (\r\n    <StyledOverlayLoading data-testid=\"overlay-loading\">\r\n      <div className=\"overlay-loading\">\r\n        <div className=\"overlay-loading-2\">\r\n          <div className=\"wrapper\">\r\n            <CircularProgress />\r\n          </div>\r\n          <div>Processing ..</div>\r\n        </div>\r\n      </div>\r\n    </StyledOverlayLoading>\r\n  );\r\n};\r\n\r\nexport default OverlayLoading;\r\n","import React from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport styled from 'styled-components';\r\nimport {\r\n  MainRouterContext,\r\n} from '../contexts/MainRouterContext';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PetsIcon from '@material-ui/icons/Pets';\r\n\r\nconst StyledBottomNavigation = styled(BottomNavigation)`\r\n  && {\r\n    width: 100%;\r\n    height: 55px;\r\n    .MuiBottomNavigationAction-root {\r\n      min-width: 50px;\r\n    }\r\n    @media only screen and (min-width: 800px) {\r\n      display: none;\r\n    }\r\n  }\r\n  \r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  border-top: 1px solid #dadada;\r\n  background: #ecf0f1;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.06),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0), 0px 1px 24px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  .icon {\r\n    width: 1em;\r\n    height: 1em;\r\n    font-size: 1.7rem;\r\n    line-height: 1;\r\n  }\r\n`;\r\n\r\nconst CustomBottomNavigation = (props: RouteComponentProps) => {\r\n  const { history } = props;\r\n  const { selectedPath, updateRouter } = React.useContext(\r\n    MainRouterContext\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <React.Fragment>\r\n        <StyledBottomNavigation\r\n          value={selectedPath}\r\n          onChange={(e, path) => {\r\n            if (updateRouter) updateRouter(path);\r\n            history.push(path);\r\n          }}\r\n        >\r\n          <BottomNavigationAction label=\"Home\" value=\"/pokemons\" icon={<HomeIcon />} />\r\n          <BottomNavigationAction label=\"My Pokemons\" value=\"/mypokemons\" icon={<PetsIcon />} />\r\n          {/* {routers.map((d: NavigationProps, i: number) => {\r\n            return (\r\n              <BottomNavigationAction\r\n                key={i}\r\n                label={d.label}\r\n                value={d.path}\r\n                data-testid=\"routers\"\r\n                icon={\r\n                  <div\r\n                    className={`icon mdi mdi-${d.icon}${\r\n                      d.outline && selectedPath !== d.path ? '-outline' : ''\r\n                    }`}\r\n                  />\r\n                }\r\n              />\r\n            );\r\n          })} */}\r\n        </StyledBottomNavigation>\r\n      </React.Fragment>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomBottomNavigation);\r\n","//MODULES\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n//COMPONENT\r\nimport { SnackbarContext } from '../contexts/SnackbarContext';\r\nimport { RouteConfigComponentProps } from 'react-router-config';\r\n\r\nconst PageLoading = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 20000;\r\n`;\r\n\r\nexport type Loader = () => Promise<any>;\r\n\r\nexport interface AsyncComponentWrapper\r\n  extends React.FC<RouteConfigComponentProps> {\r\n  load: Loader;\r\n}\r\n\r\ntype AsyncComponentFunctionType = (loader: Loader) => AsyncComponentWrapper;\r\nexport const generateAsyncComponent: AsyncComponentFunctionType = (\r\n  loader: Loader\r\n) => {\r\n  let Component: any = null;\r\n  const load: Loader = async () => {\r\n    const ResolvedComponent = await loader();\r\n    Component = ResolvedComponent.default || ResolvedComponent;\r\n  };\r\n\r\n  const AsyncComponent: AsyncComponentWrapper = (\r\n    props: RouteConfigComponentProps\r\n  ) => {\r\n    const [Comp, setComponent] = React.useState<any>(null);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const snackbarContext = React.useContext(SnackbarContext);\r\n\r\n    React.useEffect(() => {\r\n      setLoading(true);\r\n      const fetchComponent = async () => {\r\n        try {\r\n          await load();\r\n          setLoading(false);\r\n          if (Comp !== Component) {\r\n            setComponent(() => Component);\r\n          }\r\n        } catch (err) {\r\n          if (snackbarContext.show)\r\n            snackbarContext.show('Error loading page, please refresh page', {\r\n              severity: 'error',\r\n            });\r\n          console.log('ERROR WHILE LOADING PAGE ROUTE', err);\r\n        }\r\n      };\r\n\r\n      fetchComponent();\r\n      // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (Component) return <Component {...props} />;\r\n    if (loading) {\r\n      return (\r\n        <PageLoading>\r\n          <LinearProgress />\r\n        </PageLoading>\r\n      );\r\n    }\r\n    if (Comp) return <Comp {...props} />;\r\n    return <div>404 Not Found</div>;\r\n  };\r\n\r\n  AsyncComponent.load = async () => {\r\n    const ResolvedComponent = await loader();\r\n    Component = ResolvedComponent.default || ResolvedComponent;\r\n  };\r\n\r\n  return AsyncComponent;\r\n};\r\n\r\n//DEFAULTS\r\nexport default generateAsyncComponent;\r\n","import React from 'react';\r\nimport { generateAsyncComponent } from './components/AsyncComponent';\r\nimport { RouteConfig } from 'react-router-config';\r\nimport { PATHS } from './contexts/MainRouterContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n//ROUTERS\r\nconst Pokemons = generateAsyncComponent(() =>\r\n  import(/* webpackChunkName: \"Pokemons\" */ './screens/Pokemons')\r\n);\r\nconst MyPokemons = generateAsyncComponent(() =>\r\n  import(/* webpackChunkName: \"MyPokemons\" */ './screens/MyPokemons')\r\n);\r\n\r\nconst PokemonDetails = generateAsyncComponent(() =>\r\n  import(/*webpackChunkName: \"PokemonDetails\"*/ './screens/PokemonDetails')\r\n);\r\n\r\nconst Routers: RouteConfig[] = [\r\n  {\r\n    component: Pokemons,\r\n    path: PATHS.POKEMONS,\r\n    routes: [\r\n      {\r\n        component: PokemonDetails,\r\n        path: '/pokemons/:name',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    component: MyPokemons,\r\n    path: PATHS.MY_POKEMONS,\r\n    routes: [\r\n      {\r\n        component: PokemonDetails,\r\n        path: '/mypokemons/:name',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    // eslint-disable-next-line react/display-name\r\n    component: () => <Redirect from=\"/\" to={PATHS.POKEMONS} />,\r\n    path: '/',\r\n  },\r\n];\r\n\r\nexport default Routers;\r\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { SnackbarContext } from './contexts/SnackbarContext';\nimport axios from 'axios';\nimport { BASE_URL } from './config';\nimport OverlayLoading from './components/OverlayLoading';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n// import { ServiceWorkerContext } from './contexts/ServiceWorkerContext';\nimport { MyPokemonContext } from './contexts/MyPokemonContext';\nimport { IconButton } from '@material-ui/core';\nimport MDIcon from './components/MDIcon';\nimport BottomNavigation from './components/BottomNavigation';\nimport { renderRoutes } from 'react-router-config';\nimport routes from './routes';\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers['Accept'] = 'application/json';\naxios.defaults.headers['Content-Type'] = 'application/json';\n\nconst App = () => {\n  const {\n    autoHideDuration,\n    isOpened,\n    message,\n    severity,\n    close,\n  } = React.useContext(SnackbarContext);\n\n  const { fetchMyPokemons } = React.useContext(MyPokemonContext);\n\n  // const {\n  //   shouldUpdate,\n  //   refreshPage,\n  //   countDown,\n  //   checkAppInstalledStatus,\n  // } = React.useContext(ServiceWorkerContext);\n\n  React.useEffect(() => {\n    if (fetchMyPokemons) fetchMyPokemons();\n    // if (checkAppInstalledStatus) checkAppInstalledStatus();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {renderRoutes(routes)}\n      <BottomNavigation />\n      <Snackbar\n        open={!!isOpened}\n        autoHideDuration={autoHideDuration}\n        onClose={close}\n        message={!severity && message}\n        style={{ bottom: '70px' }}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={close}\n          >\n            <MDIcon icon=\"close\" />\n          </IconButton>,\n        ]}\n        data-testid=\"snackbar\"\n      >\n        <Alert onClose={close} severity={severity}>\n            {message}\n          </Alert>\n      </Snackbar>\n      {/* <section>\n        <Dialog open={shouldUpdate}>\n          <DialogTitle>Application update is available!</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Click reload to update the app\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={refreshPage}>{`Reload ${countDown}`}</Button>\n          </DialogActions>\n        </Dialog>\n      </section> */}\n      <OverlayLoading />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { SnackbarStore } from './contexts/SnackbarContext';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { COLORS } from './config';\nimport { OverlayLoadingStore } from './contexts/OverlayLoadingContext';\nimport { ServiceWorkerStore } from './contexts/ServiceWorkerContext';\nimport { WindowStackStore } from './contexts/WindowStackContext';\nimport { MainRouterStore } from './contexts/MainRouterContext';\nimport {\n  PokemonStore,\n  Pokemon,\n  PokemonListItem,\n} from './contexts/PokemonContext';\nimport { MyPokemonStore } from './contexts/MyPokemonContext';\nimport routes from './routes';\nimport { ensureReady } from './utils';\nimport { BrowserRouter, StaticRouter } from 'react-router-dom';\n// import * as serviceWorker from './serviceWorker';\n\nimport {\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n  ApolloProvider\n} from \"@apollo/client\";\n\nconst MUITheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: COLORS.primary,\n    },\n    secondary: {\n      main: COLORS.secondary,\n    },\n  },\n});\n\nexport type ServerProps = {\n  pokemons?: PokemonListItem[];\n  pokemon?: Pokemon;\n};\n\nconst cache = new InMemoryCache();\nconst link = createHttpLink({\n  uri: \"https://graphql-pokeapi.vercel.app/api/graphql\"\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link,\n});\n\nconst generateAppComponent = (props?: ServerProps) => {\n  const { pokemon, pokemons } = props || {};\n\n  return (\n    <ApolloProvider client={client}>\n    <OverlayLoadingStore>\n      <SnackbarStore>\n        <ServiceWorkerStore>\n          <MainRouterStore>\n            <WindowStackStore>\n              <PokemonStore pokemon={pokemon} pokemons={pokemons}>\n                <MyPokemonStore>\n                  <MuiThemeProvider theme={MUITheme}>\n                    \n                      <App />\n                   \n                  </MuiThemeProvider>\n                </MyPokemonStore>\n              </PokemonStore>\n            </WindowStackStore>\n          </MainRouterStore>\n        </ServiceWorkerStore>\n      </SnackbarStore>\n    </OverlayLoadingStore>\n    </ApolloProvider>\n  );\n};\n\nif (typeof window !== 'undefined') {\n  const stringProps = document.getElementById('props')?.dataset?.props;\n\n  let serverProps: ServerProps | undefined = undefined;\n\n  try {\n    const parsedProps = JSON.parse(stringProps || '');\n    serverProps = parsedProps;\n  } catch (err) {\n    serverProps = undefined;\n  }\n\n  ensureReady(routes).then(() => {\n    ReactDOM.hydrate(\n      <BrowserRouter>{generateAppComponent(serverProps)}</BrowserRouter>,\n      document.getElementById('root')\n    );\n  });\n  // serviceWorker.register();\n}\n\nexport const renderOnServer = (location: string, serverProps: ServerProps) => {\n  return ensureReady(routes, location).then(() => (\n    <StaticRouter location={location} context={{}}>\n      {generateAppComponent(serverProps)}\n    </StaticRouter>\n  ));\n};\n\n// const dummyData = [\n//   {\n//     name: 'bulbasaur',\n//     url: 'https://pokeapi.co/api/v2/pokemon/1/',\n//   },\n//   {\n//     name: 'ivysaur',\n//     url: 'https://pokeapi.co/api/v2/pokemon/2/',\n//   },\n//   {\n//     name: 'venusaur',\n//     url: 'https://pokeapi.co/api/v2/pokemon/3/',\n//   },\n//   {\n//     name: 'charmander',\n//     url: 'https://pokeapi.co/api/v2/pokemon/4/',\n//   },\n// ];\n\n// const pokemonDummy: Pokemon = {\n//   name: 'aa',\n//   abilities: [\n//     {\n//       ability: {\n//         name: 'aaa',\n//       },\n//     },\n//   ],\n//   image_url: 'aaaa',\n//   moves: [\n//     {\n//       move: {\n//         name: 'aaa',\n//       },\n//     },\n//   ],\n//   species: {\n//     name: 'aaaa',\n//   },\n//   types: [\n//     {\n//       slot: 1,\n//       type: {\n//         name: 'bb',\n//       },\n//     },\n//   ],\n// };\n\n// const renderServer = async () => {\n//   const result = await renderOnServer(window.location.pathname, {\n//     pokemons: dummyData.map((d: any) => {\n//       const pokemon: PokemonListItem = {\n//         name: d.name,\n//         image_url: generateImageUrlByUrl(d.url),\n//       };\n//       return pokemon;\n//     }),\n//     pokemon: pokemonDummy,\n//   });\n//   console.log(ReactDOMServer.renderToString(result));\n// };\n\n// renderServer();\n","import React, { Component } from 'react';\r\n\r\nexport type NavigationProps = {\r\n  icon: string;\r\n  label: string;\r\n  path: string;\r\n  outline: boolean;\r\n};\r\n\r\ntype DefaultValue = {\r\n  selectedPath: string;\r\n  selectedRoute: NavigationProps | null;\r\n  containerPose: string;\r\n  routers: NavigationProps[];\r\n  checkAndUpdateRouter?: () => void;\r\n  updateRouter?: (path: string) => void;\r\n};\r\n\r\nexport const PATHS = {\r\n  POKEMONS: '/pokemons',\r\n  MY_POKEMONS: '/mypokemons',\r\n};\r\n\r\nexport const ROUTER_STATE = {\r\n  OPEN_CONTAINER: 'opencontainer',\r\n  CLOSE_CONTAINER: 'closecontainer',\r\n};\r\n\r\nexport const DEFAULT_ROUTERS: NavigationProps[] = [\r\n  {\r\n    icon: 'pokemon-go',\r\n    label: 'Pokemon List',\r\n    path: PATHS.POKEMONS,\r\n    outline: false,\r\n  },\r\n  {\r\n    icon: 'pokeball',\r\n    label: 'My Pokemon',\r\n    path: PATHS.MY_POKEMONS,\r\n    outline: false,\r\n  },\r\n];\r\n\r\nexport const defaultValue: DefaultValue = {\r\n  selectedPath: PATHS.POKEMONS,\r\n  selectedRoute: null,\r\n  containerPose: ROUTER_STATE.OPEN_CONTAINER,\r\n  routers: DEFAULT_ROUTERS,\r\n};\r\n\r\nexport const MainRouterContext = React.createContext(defaultValue);\r\n\r\nexport class MainRouterStore extends Component<any, DefaultValue> {\r\n  state = defaultValue;\r\n\r\n  updateRouter = (path: string) => {\r\n    const route: NavigationProps | undefined = this.state.routers.find(\r\n      v => v.path === path\r\n    );\r\n\r\n    if (route) {\r\n      this.setState({\r\n        selectedRoute: { ...route },\r\n        selectedPath: route.path,\r\n      });\r\n    }\r\n  };\r\n\r\n  checkAndUpdateRouter = () => {\r\n    if (typeof window !== 'undefined') {\r\n      const path: string = window.location.pathname;\r\n      const routers = this.state.routers;\r\n\r\n      if (routers) {\r\n        const route: NavigationProps | undefined = routers.find(\r\n          v => path.indexOf(v.path) !== -1\r\n        );\r\n\r\n        if (route) {\r\n          this.setState({\r\n            selectedRoute: route,\r\n            selectedPath: route.path,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MainRouterContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          checkAndUpdateRouter: this.checkAndUpdateRouter,\r\n          updateRouter: this.updateRouter,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </MainRouterContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const withMainRouter = (Comp: any) => (props: any) => (\r\n  <MainRouterContext.Consumer>\r\n    {snackbarContext => <Comp {...props} snackbarContext={snackbarContext} />}\r\n  </MainRouterContext.Consumer>\r\n);\r\n","import React, { Component } from 'react'\r\n\r\nexport type DefaultValue = {\r\n  isOpened: boolean;\r\n  autoHideDuration: number;\r\n  severity: string | null;\r\n  message: string;\r\n  show?: (\r\n    message: string,\r\n    state: {\r\n      isOpened?: boolean;\r\n      autoHideDuration?: number;\r\n      severity?: string | null;\r\n      message?: string;\r\n    }\r\n  ) => any;\r\n  close?: () => any;\r\n};\r\n\r\nexport const defaultValue: DefaultValue = {\r\n  isOpened: false,\r\n  autoHideDuration: 6000,\r\n  severity: null,\r\n  message: '',\r\n};\r\n\r\nexport const SnackbarContext = React.createContext(defaultValue);\r\n\r\nexport class SnackbarStore extends Component {\r\n  state = defaultValue;\r\n\r\n  show = (message = '', state = {}) => {\r\n    this.setState({ ...state, message, isOpened: true });\r\n  };\r\n\r\n  close = () => {\r\n    this.setState({ isOpened: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SnackbarContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          show: this.show,\r\n          close: this.close,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </SnackbarContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\ntype WithSnackbarType = (\r\n  Component: React.ComponentClass | React.FunctionComponent<any>\r\n) => React.FunctionComponent<any>;\r\n\r\nexport const withSnackbar: WithSnackbarType = Comp => props => (\r\n  <SnackbarContext.Consumer>\r\n    {snackbarContext => <Comp {...props} snackbarContext={snackbarContext} />}\r\n  </SnackbarContext.Consumer>\r\n);\r\n","import localforage from 'localforage';\r\nimport { IMAGE_URL } from './config';\r\nimport { matchRoutes, RouteConfig } from 'react-router-config';\r\nimport { AsyncComponentWrapper } from './components/AsyncComponent';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    utils: {\r\n      calculateCatchPokemon: any;\r\n      localforage: any;\r\n    };\r\n  }\r\n}\r\nexport const generateImageUrlByUrl = (url: string): string => {\r\n  const splittedUrl = url.split('/');\r\n  const id =\r\n    splittedUrl[splittedUrl.length - 1] || splittedUrl[splittedUrl.length - 2];\r\n  return `${IMAGE_URL}/${id}.png`;\r\n};\r\nexport const generateImageUrlById = (id: number): string => {\r\n  return `${IMAGE_URL}/${id}.png`;\r\n};\r\n\r\nexport const utils = {\r\n  calculateCatchPokemon: () => Math.random() < 0.5,\r\n  localforage,\r\n};\r\n\r\nexport const convertDashedToReadable = (dashedString: string): string => {\r\n  return dashedString.replace(/-/g, ' ');\r\n};\r\n\r\nexport const ensureReady = (routeConfig: RouteConfig[], location?: string) => {\r\n  const matches = matchRoutes(\r\n    routeConfig,\r\n    location || window.location.pathname\r\n  );\r\n\r\n  return Promise.all(\r\n    matches.map(match => {\r\n      const { component } = match.route;\r\n      const asyncComponent = component as AsyncComponentWrapper;\r\n      if (asyncComponent && asyncComponent.load) {\r\n        return asyncComponent.load();\r\n      }\r\n      return undefined;\r\n    })\r\n  );\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n  if (window) (window as Window).utils = utils;\r\n}\r\n","import React, { Component } from 'react'\r\n\r\ntype DefaultValue = {\r\n  isOpened?: boolean;\r\n  show?: () => any;\r\n  hide?: () => any;\r\n};\r\n\r\nexport const defaultValue: DefaultValue = {\r\n  isOpened: false,\r\n};\r\n\r\nexport const OverlayLoadingContext = React.createContext(defaultValue);\r\n\r\nexport class OverlayLoadingStore extends Component {\r\n  state = defaultValue;\r\n\r\n  show = () => {\r\n    this.setState({ isOpened: true });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({ isOpened: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <OverlayLoadingContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          show: this.show,\r\n          hide: this.hide,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </OverlayLoadingContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\ntype WithOverlayLoadingType = (\r\n  Component: React.ComponentClass | React.FunctionComponent<any>\r\n) => React.FunctionComponent<any>;\r\n\r\nexport const withOverlayLoading: WithOverlayLoadingType = Comp => props => (\r\n  <OverlayLoadingContext.Consumer>\r\n    {overlayLoadingContext => (\r\n      <Comp {...props} overlayLoadingContext={overlayLoadingContext} />\r\n    )}\r\n  </OverlayLoadingContext.Consumer>\r\n);\r\n","import React, { Component } from 'react';\r\nimport localforage from 'localforage';\r\nimport { LOCAL_MY_POKEMONS_URI } from '../config';\r\nimport { utils } from '../utils';\r\nimport { PokemonListItem } from './PokemonContext';\r\nimport { withOverlayLoading } from './OverlayLoadingContext';\r\nimport { withSnackbar } from './SnackbarContext';\r\n\r\nexport interface MyPokemonListItem extends PokemonListItem {\r\n  nickname: string;\r\n}\r\n\r\ninterface Actions {\r\n  fetchMyPokemons?: () => Promise<MyPokemonListItem[]>;\r\n  catchPokemon?: (pokemonListItem: PokemonListItem) => Promise<any>;\r\n  clearCatchTimeout?: () => void;\r\n  isOwned?: (name: string) => MyPokemonListItem | null;\r\n  clearPokemons?: () => void;\r\n  release?: (name: string) => void;\r\n  updateNickname?: (name: string, nickname: string) => void;\r\n}\r\n\r\ninterface DefaultValue extends Actions {\r\n  myPokemons: MyPokemonListItem[];\r\n  isCalculatingCatch: boolean;\r\n  timeoutId: number;\r\n}\r\n\r\nexport const defaultValue: DefaultValue = {\r\n  myPokemons: [],\r\n  isCalculatingCatch: false,\r\n  timeoutId: -1,\r\n};\r\n\r\nexport const MyPokemonContext = React.createContext(defaultValue);\r\n\r\nclass MyPokemonStoreClass extends Component<any, DefaultValue>\r\n  implements Actions {\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = props.value || defaultValue;\r\n  }\r\n\r\n  catchPokemon = (pokemonListItem: PokemonListItem) => {\r\n    return new Promise(resolve => {\r\n      this.props.overlayLoadingContext.show();\r\n      const timeoutId = setTimeout(async () => {\r\n        this.props.overlayLoadingContext.hide();\r\n        if (utils.calculateCatchPokemon()) {\r\n          const myPokemons: MyPokemonListItem[] = await this.getMyPokemonsFromLocal();\r\n\r\n          if (myPokemons) {\r\n            const isOwned = await this.isOwned(pokemonListItem.name);\r\n            if (!isOwned) {\r\n              myPokemons.push({\r\n                ...pokemonListItem,\r\n                nickname: '',\r\n              });\r\n              this.props.snackbarContext.show('Gotcha!', {\r\n                severity: 'success',\r\n              });\r\n            }\r\n            const newMyPokemons = [...myPokemons];\r\n            await localforage.setItem(LOCAL_MY_POKEMONS_URI, newMyPokemons);\r\n            await this.setStateAsync({\r\n              myPokemons: newMyPokemons,\r\n            });\r\n            resolve(newMyPokemons);\r\n          }\r\n        } else {\r\n          this.props.snackbarContext.show('Failed to catch :( never give up!', {\r\n            severity: 'failed',\r\n          });\r\n        }\r\n\r\n        resolve(false);\r\n      }, Math.random() * 2000 + 1000);\r\n\r\n      this.setStateAsync({ timeoutId });\r\n    });\r\n  };\r\n\r\n  clearCatchTimeout = async () => {\r\n    const { timeoutId } = this.state;\r\n    if (timeoutId !== -1) {\r\n      clearTimeout(timeoutId);\r\n      await this.setStateAsync({\r\n        timeoutId: -1,\r\n      });\r\n    }\r\n  };\r\n\r\n  clearPokemons = async () => {\r\n    const newMyPokemons: any[] = [];\r\n    await this.setStateAsync({\r\n      myPokemons: newMyPokemons,\r\n    });\r\n    await localforage.setItem(LOCAL_MY_POKEMONS_URI, newMyPokemons);\r\n  };\r\n\r\n  fetchMyPokemons = async () => {\r\n    try {\r\n      const myPokemons: MyPokemonListItem[] = await this.getMyPokemonsFromLocal();\r\n      if (myPokemons) {\r\n        await this.setStateAsync({\r\n          myPokemons,\r\n        });\r\n\r\n        return myPokemons;\r\n      }\r\n      const newMyPokemons: any[] = [];\r\n      await localforage.setItem(LOCAL_MY_POKEMONS_URI, newMyPokemons);\r\n      await this.setStateAsync({\r\n        myPokemons: { ...newMyPokemons },\r\n      });\r\n      return newMyPokemons;\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      await this.setStateAsync({ isFetchingMyPokemons: false });\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  getMyPokemonsFromLocal = async () => {\r\n    const myPokemons: MyPokemonListItem[] | null = await localforage.getItem(\r\n      LOCAL_MY_POKEMONS_URI\r\n    );\r\n\r\n    if (myPokemons) return myPokemons;\r\n\r\n    const newMyPokemons: any[] = [];\r\n    localforage.setItem(LOCAL_MY_POKEMONS_URI, newMyPokemons);\r\n    return newMyPokemons;\r\n  };\r\n\r\n  isOwned = (name: string) => {\r\n    const { myPokemons } = this.state;\r\n    if (myPokemons.length > 0) {\r\n      for (const pokemon of myPokemons) {\r\n        if (pokemon.name === name) {\r\n          return pokemon;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  updateNickname = async (name: string, nickname: string) => {\r\n    const myPokemons = await this.getMyPokemonsFromLocal();\r\n    if (myPokemons.length > 0) {\r\n      for (let i = 0; i < myPokemons.length; i++) {\r\n        if (myPokemons[i].name === name) {\r\n          myPokemons[i].nickname = nickname;\r\n          await this.setStateAsync({\r\n            myPokemons,\r\n          });\r\n          await localforage.setItem(LOCAL_MY_POKEMONS_URI, myPokemons);\r\n          this.props.snackbarContext.show('Nickname updated', {\r\n            severity: 'success',\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  release = async (name: string) => {\r\n    const myPokemons = await this.getMyPokemonsFromLocal();\r\n    if (myPokemons.length > 0) {\r\n      for (let i = 0; i < myPokemons.length; i++) {\r\n        if (myPokemons[i].name === name) {\r\n          myPokemons.splice(i, 1);\r\n          await this.setStateAsync({\r\n            myPokemons,\r\n          });\r\n          await localforage.setItem(LOCAL_MY_POKEMONS_URI, myPokemons);\r\n          this.props.snackbarContext.show(`Pokemon ${name} released`, {\r\n            severity: 'success',\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  setStateAsync = (state: any): Promise<DefaultValue> => {\r\n    return new Promise(resolve => {\r\n      this.setState(state, () => resolve(state));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MyPokemonContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          fetchMyPokemons: this.fetchMyPokemons,\r\n          catchPokemon: this.catchPokemon,\r\n          clearCatchTimeout: this.clearCatchTimeout,\r\n          isOwned: this.isOwned,\r\n          clearPokemons: this.clearPokemons,\r\n          updateNickname: this.updateNickname,\r\n          release: this.release,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </MyPokemonContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const MyPokemonStore = withOverlayLoading(\r\n  withSnackbar(MyPokemonStoreClass)\r\n);\r\n\r\nexport const withMyPokemon = (Comp: any) => (props: any) => (\r\n  <MyPokemonContext.Consumer>\r\n    {myPokemonContext => (\r\n      <Comp {...props} myPokemonContext={myPokemonContext} />\r\n    )}\r\n  </MyPokemonContext.Consumer>\r\n);\r\n","import React, { Component } from 'react';\r\nimport { APP_INSTALL_STATUS_URI } from '../config';\r\n\r\nexport type DefaultValue = {\r\n  shouldUpdate: boolean;\r\n  countDown: number;\r\n  intervalId: number | null;\r\n  isNotificationAllowed: boolean;\r\n  appInstallationStatus: string;\r\n  isInstallPromptUIShowed: boolean;\r\n  updateServiceWorker?: () => void;\r\n  refreshPage?: () => void;\r\n  checkAppInstalledStatus?: () => void;\r\n  showAppInstallPrompt?: () => void;\r\n  rejectAppInstall?: () => void;\r\n};\r\n\r\nexport const defaultValue: DefaultValue = {\r\n  shouldUpdate: false,\r\n  countDown: 5,\r\n  intervalId: null,\r\n  isNotificationAllowed: false,\r\n  appInstallationStatus: 'unset',\r\n  isInstallPromptUIShowed: false,\r\n};\r\n\r\nexport const ServiceWorkerContext = React.createContext(defaultValue);\r\n\r\nexport class ServiceWorkerStore extends Component<any, DefaultValue> {\r\n  state = defaultValue;\r\n  deferredAppInstallPrompt: any = null;\r\n\r\n  updateServiceWorker = () => {\r\n    this.setState(\r\n      {\r\n        countDown: 5,\r\n        shouldUpdate: true,\r\n      },\r\n      () => {\r\n        this.setState({\r\n          intervalId: null\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  refreshPage = () => {\r\n    navigator.serviceWorker.getRegistration().then(function(reg) {\r\n      if (reg) {\r\n        reg.unregister().then(function() {\r\n          window.location.reload(true);\r\n        });\r\n      } else {\r\n        window.location.reload(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  checkAppInstalledStatus = () => {\r\n    this.setState({});\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener('beforeinstallprompt', e => {\r\n        // Stash the event so it can be triggered later.\r\n        e.preventDefault();\r\n        this.deferredAppInstallPrompt = e;\r\n        const status = localStorage.getItem(APP_INSTALL_STATUS_URI);\r\n        if (!status) {\r\n          this.setState({\r\n            appInstallationStatus: 'unset',\r\n            isInstallPromptUIShowed: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            appInstallationStatus: status,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  showAppInstallPrompt = async () => {\r\n    if (!this.deferredAppInstallPrompt) return;\r\n\r\n    this.setState({\r\n      isInstallPromptUIShowed: false,\r\n    });\r\n    this.deferredAppInstallPrompt.prompt();\r\n\r\n    const choiceResult = await this.deferredAppInstallPrompt.userChoice;\r\n    if (choiceResult.outcome === 'accepted') {\r\n      console.log('A2HS accepted');\r\n    } else {\r\n      console.log('A2HS dismissed');\r\n    }\r\n\r\n    this.setState({\r\n      appInstallationStatus: choiceResult.outcome,\r\n    });\r\n    localStorage.setItem(APP_INSTALL_STATUS_URI, choiceResult.outcome);\r\n    this.deferredAppInstallPrompt = null;\r\n  };\r\n\r\n  rejectAppInstall() {\r\n    this.setState({\r\n      appInstallationStatus: 'dismissed',\r\n    });\r\n    localStorage.setItem(APP_INSTALL_STATUS_URI, 'dismissed');\r\n    this.setState({\r\n      isInstallPromptUIShowed: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ServiceWorkerContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          updateServiceWorker: this.updateServiceWorker,\r\n          refreshPage: this.refreshPage,\r\n          checkAppInstalledStatus: this.checkAppInstalledStatus,\r\n          showAppInstallPrompt: this.showAppInstallPrompt,\r\n          rejectAppInstall: this.rejectAppInstall,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ServiceWorkerContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\ntype WithServiceWorkerType = (\r\n  Component: React.ComponentClass\r\n) => (props: any) => React.ReactNode;\r\nexport const withServiceWorker: WithServiceWorkerType = Comp => props => (\r\n  <ServiceWorkerContext.Consumer>\r\n    {serviceWorkerContext => (\r\n      <Comp {...props} overlayLoadingContext={serviceWorkerContext} />\r\n    )}\r\n  </ServiceWorkerContext.Consumer>\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Icon = styled.span`\r\n  width: 1em;\r\n  height: 1em;\r\n  font-size: 1.5rem;\r\n  line-height: 1;\r\n`;\r\n\r\nexport type Props = {\r\n  icon: string;\r\n  className?: string;\r\n};\r\n\r\nexport const MDIcon = (props: Props) => {\r\n  const { className = '', icon } = props;\r\n\r\n  return <Icon className={`${className} mdi mdi-${icon}`} />;\r\n};\r\n\r\nexport default MDIcon;\r\n","import React, { Component } from 'react';\r\n\r\ninterface Actions {\r\n  push?: () => number;\r\n  pop?: () => number;\r\n  popById?: (id: number) => number;\r\n  reset?: () => void;\r\n  readonly isWindowActive?: boolean;\r\n  isAtTop?: (id: number) => boolean;\r\n}\r\n\r\ninterface DefaultValue extends Actions {\r\n  windows: number[];\r\n}\r\n\r\nexport const defaultValue: DefaultValue = {\r\n  windows: [],\r\n};\r\n\r\nexport const WindowStackContext = React.createContext(defaultValue);\r\n\r\nexport class WindowStackStore extends Component implements Actions {\r\n  state = defaultValue;\r\n\r\n  push = () => {\r\n    const id = this.state.windows.length;\r\n    this.state.windows.push(id);\r\n    this.setState({\r\n      windows: this.state.windows.slice(),\r\n    });\r\n\r\n    return id;\r\n  };\r\n\r\n  pop = () => {\r\n    this.state.windows.pop();\r\n    this.setState({ ...this.state.windows });\r\n    return this.state.windows.length;\r\n  };\r\n\r\n  popById = (id: number) => {\r\n    this.state.windows.splice(this.state.windows.indexOf(id), 1);\r\n    this.setState({ ...this.state.windows });\r\n    return this.state.windows.length;\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      windows: [],\r\n    });\r\n  };\r\n\r\n  get isWindowActive() {\r\n    return this.state.windows.length > 0;\r\n  }\r\n\r\n  isAtTop = (id: number) => {\r\n    if (this.state.windows.length > 0) {\r\n      return this.state.windows[this.state.windows.length - 1] === id;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <WindowStackContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          push: this.push,\r\n          pop: this.pop,\r\n          popById: this.popById,\r\n          reset: this.reset,\r\n          isWindowActive: this.isWindowActive,\r\n          isAtTop: this.isAtTop,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </WindowStackContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\ntype WithWindowStackType = (\r\n  Component: React.ComponentClass\r\n) => (props: any) => React.ReactNode;\r\nexport const withWindowStack: WithWindowStackType = Comp => props => (\r\n  <WindowStackContext.Consumer>\r\n    {serviceWorkerContext => (\r\n      <Comp {...props} overlayLoadingContext={serviceWorkerContext} />\r\n    )}\r\n  </WindowStackContext.Consumer>\r\n);\r\n"],"sourceRoot":""}