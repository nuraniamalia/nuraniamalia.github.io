{"version":3,"sources":["components/PokemonCard.tsx","components/CustomAppBar.tsx","components/AppInstall.tsx","components/BaseRoute.tsx","../../../../node_modules/@material-ui/core/esm/styles/makeStyles.js","../../../../node_modules/@material-ui/core/esm/Badge/Badge.js","screens/MyPokemons.tsx"],"names":["StyledPokemonCard","styled","div","withRouter","props","data","history","location","React","useContext","MyPokemonContext","isOwned","myPokemons","name","data-testid","onClick","push","pathname","state","prevPath","className","alt","placeholderSrc","src","image_url","effect","filter","pokemon","toLowerCase","length","StyledLink","Link","StyledAppBar","AppBar","StyledToolbar","Toolbar","StyledTypography","Typography","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","CustomAppBar","selectedRoute","MainRouterContext","component","classes","to","label","badgeContent","noWrap","Container","BackContainer","AppInstall","ServiceWorkerContext","isInstallPromptUIShowed","rejectAppInstall","showAppInstallPrompt","Fragment","PosedContainer","posed","active","x","duration","inactive","BaseRoute","isWindowActive","WindowStackContext","appinstall","pose","initialPose","children","stylesOrCreator","options","arguments","undefined","makeStylesWithoutDefault","_extends","defaultTheme","Badge","ref","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$color","_props$component","ComponentProp","invisibleProp","invisible","_props$max","max","_props$overlap","overlap","_props$showZero","showZero","_props$variant","variant","other","_objectWithoutProperties","displayValue","concat","clsx","root","badge","capitalize","dot","withStyles","verticalAlign","flexShrink","flexDirection","flexWrap","alignContent","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","zIndex","easing","easeInOut","enteringScreen","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorError","error","RADIUS_DOT","anchorOriginTopRightRectangle","top","right","transform","transformOrigin","anchorOriginBottomRightRectangle","bottom","anchorOriginTopLeftRectangle","left","anchorOriginBottomLeftRectangle","anchorOriginTopRightCircle","anchorOriginBottomRightCircle","anchorOriginTopLeftCircle","anchorOriginBottomLeftCircle","leavingScreen","MyPokemons","clearPokemons","route","icon","map","d","i","routes","renderRoutes"],"mappings":"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","file":"static/js/MyPokemons.4e93ec58.chunk.js","sourcesContent":["import React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport styled from 'styled-components';\r\nimport { MyPokemonContext } from '../contexts/MyPokemonContext';\r\nimport { PokemonListItem } from '../contexts/PokemonContext';\r\nimport { MyPokemonListItem } from '../contexts/MyPokemonContext';\r\n\r\nconst StyledPokemonCard = styled.div`\r\n  display: block;\r\n  border-radius: 20px;\r\n  background: white;\r\n  box-shadow: 0px 0px 10px 0px #e0e0e0;\r\n  margin: 10px;\r\n  margin-top: 20px;\r\n  overflow: hidden;\r\n  max-width: 150px;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border: 1px solid #d4d4d4;\r\n  padding-bottom: 35px;\r\n\r\n  @media only screen and (min-width: 800px) {\r\n    margin: 20px;\r\n    max-width: 192px;    \r\n  }\r\n\r\n  &:active {\r\n    opacity: 0.3;\r\n    transition: 0.03s;\r\n  }\r\n\r\n  .picture {\r\n    height: 80px;\r\n    padding: 10px;\r\n    max-height: 300px;\r\n    width: 145px;\r\n    margin-bottom: 20px;\r\n\r\n    span {\r\n      \r\n      width: 100%;\r\n    }\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: contain;\r\n      object-position: center;\r\n    }\r\n  }\r\n\r\n  .details {\r\n    display: block;\r\n    padding: 10px;\r\n\r\n    .name {\r\n      font-size: 15pt;\r\n      font-weight: 500;\r\n      margin-bottom: 10px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      word-wrap: break-word;\r\n      white-space: nowrap;\r\n      text-transform: capitalize;\r\n      text-align: center;\r\n      margin-top: 10px;\r\n    }\r\n\r\n    .owned {\r\n      color: #fff;\r\n      text-align: center;\r\n      background-color: #3faf48;\r\n      width: 95px;\r\n      margin: auto;\r\n      border-radius: 20px;\r\n      padding: 3px;\r\n    }\r\n\r\n    .nickname {\r\n      text-align: left;\r\n\r\n      .label {\r\n        color: #606060;\r\n        margin-top: 10px;\r\n        font-size: 9pt;\r\n      }\r\n\r\n      .nickname-value {\r\n        font-size: 8pt;\r\n        font-weight: bold;\r\n        color: #0098e1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface Props extends RouteComponentProps {\r\n  data: PokemonListItem | MyPokemonListItem;\r\n}\r\n\r\nconst PokemonCard = (props: Props) => {\r\n  const { data, history, location } = props;\r\n  const { isOwned, myPokemons } = React.useContext(MyPokemonContext);\r\n\r\n  let ownedPokemon: MyPokemonListItem | null = null;\r\n\r\n  if (isOwned) {\r\n    ownedPokemon = isOwned(data.name);\r\n  }\r\n\r\n  return (\r\n    \r\n    <StyledPokemonCard\r\n      data-testid=\"pokemon-card\"\r\n      onClick={() => {\r\n        history.push({\r\n          pathname: `${location.pathname}/${data.name}`,\r\n          state: {\r\n            prevPath: location.pathname,\r\n          },\r\n        });\r\n      }}\r\n    >\r\n      <div className=\"picture\">\r\n        <LazyLoadImage\r\n          alt=\"profile picture\"\r\n          placeholderSrc=\"/images/placeholder.png\"\r\n          src={data.image_url}\r\n          effect=\"blur\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"details\">\r\n        <div data-testid=\"pokemon-card-name\" className=\"name\">\r\n          {data.name}\r\n        </div>\r\n        <div data-testid=\"pokemon-card-owned\" className=\"owned\">\r\n          Owned : {myPokemons.filter(pokemon => pokemon.name.toLowerCase() == data.name.toLowerCase()).length}\r\n        </div>\r\n        {/* {ownedPokemon && (\r\n          <div data-testid=\"pokemon-card-owned\" className=\"owned\">\r\n            Owned\r\n          </div>\r\n        )} */}\r\n        {/* {ownedPokemon && (\r\n          <div className=\"nickname\">\r\n            <div className=\"label\">Nickname</div>\r\n\r\n            <div data-testid=\"pokemon-card-nickname\" className=\"nickname-value\">\r\n              {ownedPokemon.nickname === ''\r\n                ? \"Haven't named\"\r\n                : ownedPokemon.nickname}\r\n            </div>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    </StyledPokemonCard>\r\n  );\r\n};\r\n\r\nexport default withRouter(PokemonCard);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { MyPokemonContext } from '../contexts/MyPokemonContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Pets from '@material-ui/icons/Pets';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport { MainRouterContext } from '../contexts/MainRouterContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StyledLink = styled(Link)`\r\n  && {\r\n    text-decoration: none;\r\n    color: #3faf48;\r\n  }\r\n`;\r\nconst StyledAppBar = styled(AppBar)`\r\n  && {\r\n    padding: 5px;\r\n    background: #fff;\r\n    color: #3faf48;\r\n    font-weight: 600;\r\n    font-size: 16pt;\r\n    /* border-bottom: 1px solid #dadada; */\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.06),\r\n      0px 4px 5px 0px rgba(0, 0, 0, 0), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n  }\r\n`;\r\n\r\nconst StyledToolbar = styled(Toolbar)`\r\n  && {\r\n    justify-content: space-between;\r\n    min-height: 55px;\r\n    min-width: 200px;\r\n\r\n    .info {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n\r\n      &:visited {\r\n        text-decoration: none;\r\n        color: inherit;\r\n      }\r\n\r\n      .title {\r\n        margin-left: 20px;\r\n        font-weight: bold;\r\n        display: flex;\r\n        width: 100px;\r\n      }\r\n    }\r\n    .logo {\r\n      display: none;\r\n      @media only screen and (min-width: 800px) {\r\n        display: block;\r\n      }\r\n    }\r\n    \r\n  }\r\n`;\r\n\r\nconst StyledTypography = styled(Typography)`\r\n  &&{\r\n    font-size: 13pt;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  component?: React.ReactNode;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomAppBar = (props: Props) => {\r\n  const { selectedRoute } = React.useContext(MainRouterContext);\r\n  const { component } = props;\r\n  const { myPokemons } = React.useContext(MyPokemonContext);\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <StyledAppBar position=\"fixed\">\r\n      \r\n      <StyledToolbar>\r\n        <StyledLink className=\"info\" to=\"/\">\r\n          <div className=\"logo\">\r\n            <span>tokopokemon</span>\r\n          </div>\r\n          {/* <div className=\"tot\">My Pokemon: {myPokemons.length}</div> */}\r\n          <span data-testid=\"appbar-title\" className=\"title\">\r\n            {selectedRoute && selectedRoute.label}\r\n          </span>\r\n        </StyledLink>\r\n\r\n        {component}\r\n        {/* <div>\r\n          <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n            Explore\r\n          </IconButton>\r\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              \r\n              My Pokemon\r\n            </Badge>\r\n          </IconButton>\r\n        </div> */}\r\n\r\n{/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div> */}\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <StyledLink className=\"info\" to=\"/mypokemons\">\r\n              {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\"> */}\r\n                <Badge badgeContent={myPokemons.length} color=\"secondary\">\r\n                  <Pets />\r\n                  <StyledTypography className={classes.title}  noWrap>\r\n                    My Pokemon\r\n                  </StyledTypography>\r\n                </Badge>\r\n              {/* </IconButton> */}\r\n            </StyledLink>\r\n          </div>\r\n      </StyledToolbar>\r\n    </StyledAppBar>\r\n  );\r\n};\r\n\r\nexport default CustomAppBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  ServiceWorkerContext,\r\n  DefaultValue,\r\n} from '../contexts/ServiceWorkerContext';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    serviceWorkerContext: DefaultValue;\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  background: #3498db;\r\n  color: white;\r\n  position: fixed;\r\n  top: 56px;\r\n  align-items: center;\r\n  width: 100%;\r\n  z-index: 1300;\r\n\r\n  .left {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .close {\r\n      font-size: 37pt;\r\n      line-height: 0;\r\n      cursor: pointer;\r\n      display: flex;\r\n      align-items: center;\r\n      height: 35px;\r\n      width: 35px;\r\n      font-weight: 100;\r\n      margin-top: -10px;\r\n      transition: 0.3s;\r\n\r\n      &:active {\r\n        opacity: 0.3;\r\n        transition: 0.1s;\r\n      }\r\n    }\r\n\r\n    .title {\r\n      font-size: 11pt;\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n\r\n  .install-button {\r\n    padding: 10px 20px;\r\n    border-radius: 30px;\r\n    border: 1px solid white;\r\n    transition: 0.3s;\r\n\r\n    &:active {\r\n      opacity: 0.3;\r\n      transition: 0.1s;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackContainer = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  position: relative;\r\n`;\r\n\r\nconst AppInstall: React.FunctionComponent = () => {\r\n  const {\r\n    isInstallPromptUIShowed,\r\n    rejectAppInstall,\r\n    showAppInstallPrompt,\r\n  } = React.useContext(ServiceWorkerContext);\r\n\r\n  if (!isInstallPromptUIShowed) return <div data-testid=\"appinstall-empty\" />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <div className=\"left\">\r\n          <div\r\n            className=\"close\"\r\n            onClick={() => {\r\n              if (rejectAppInstall) {\r\n                rejectAppInstall();\r\n              }\r\n            }}\r\n          >\r\n            &times;\r\n          </div>\r\n          <div className=\"title\">Keep track of application process</div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"install-button\"\r\n          onClick={() => {\r\n            if (showAppInstallPrompt) showAppInstallPrompt();\r\n          }}\r\n        >\r\n          Install\r\n        </div>\r\n      </Container>\r\n      <BackContainer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AppInstall;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport posed from 'react-pose';\r\nimport AppInstall from './AppInstall';\r\nimport { ServiceWorkerContext } from '../contexts/ServiceWorkerContext';\r\nimport { WindowStackContext } from '../contexts/WindowStackContext';\r\n\r\nconst Container = styled.div`\r\n  display: block;\r\n  padding-top: 45px;\r\n  height: 100vh;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst PosedContainer = posed(Container)({\r\n  active: { x: 0, transition: { duration: 300 } },\r\n  inactive: { x: -150, transition: { duration: 700 } },\r\n});\r\n\r\nconst BaseRoute = (props: any) => {\r\n  const { isInstallPromptUIShowed } = React.useContext(ServiceWorkerContext);\r\n\r\n  const { isWindowActive } = React.useContext(WindowStackContext);\r\n\r\n  return (\r\n    <PosedContainer\r\n      appinstall={isInstallPromptUIShowed}\r\n      pose={isWindowActive ? 'inactive' : 'active'}\r\n      initialPose=\"active\"\r\n    >\r\n      <AppInstall />\r\n      {props.children}\r\n    </PosedContainer>\r\n  );\r\n};\r\n\r\nexport default BaseRoute;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar RADIUS_STANDARD = 10;\nvar RADIUS_DOT = 4;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'inline-flex',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the badge `span` element. */\n    badge: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      position: 'absolute',\n      boxSizing: 'border-box',\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(12),\n      minWidth: RADIUS_STANDARD * 2,\n      lineHeight: 1,\n      padding: '0 6px',\n      height: RADIUS_STANDARD * 2,\n      borderRadius: RADIUS_STANDARD,\n      zIndex: 1,\n      // Render the badge on top of potential ripples.\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText\n    },\n\n    /* Styles applied to the root element if `variant=\"dot\"`. */\n    dot: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangle\"`. */\n    anchorOriginTopRightRectangle: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangle\"`. */\n    anchorOriginBottomRightRectangle: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangle\"`. */\n    anchorOriginTopLeftRectangle: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangle\"`. */\n    anchorOriginBottomLeftRectangle: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circle\"`. */\n    anchorOriginTopRightCircle: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circle\"`. */\n    anchorOriginBottomRightCircle: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circle\"`. */\n    anchorOriginTopLeftCircle: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circle\"`. */\n    anchorOriginBottomLeftCircle: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      '&$invisible': {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    },\n\n    /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n    invisible: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  };\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      badgeContent = props.badgeContent,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      ComponentProp = _props$component === void 0 ? 'span' : _props$component,\n      invisibleProp = props.invisible,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 99 : _props$max,\n      _props$overlap = props.overlap,\n      overlap = _props$overlap === void 0 ? 'rectangle' : _props$overlap,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  var invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContent === 0 && !showZero || badgeContent == null && variant !== 'dot')) {\n    invisible = true;\n  }\n\n  var displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? \"\".concat(max, \"+\") : badgeContent;\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[\"\".concat(anchorOrigin.horizontal).concat(capitalize(anchorOrigin.vertical), \"}\")], classes[\"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)).concat(capitalize(overlap))], color !== 'default' && classes[\"color\".concat(capitalize(color))], invisible && classes.invisible, variant === 'dot' && classes.dot)\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   */\n  overlap: PropTypes.oneOf(['circle', 'rectangle']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['dot', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport PokemonCard from '../components/PokemonCard';\r\nimport BaseRoute from '../components/BaseRoute';\r\nimport { MyPokemonContext } from '../contexts/MyPokemonContext';\r\nimport MDIcon from '../components/MDIcon';\r\nimport CustomAppBar from '../components/CustomAppBar';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\r\n\r\nconst Container = styled.div`\r\n  padding: 15px;\r\n  padding-top: 25px;\r\n  padding-bottom: 70px;\r\n\r\n  .card-wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    background: white;\r\n  }\r\n\r\n  .empty {\r\n    font-size: 20pt;\r\n    font-weight: 300;\r\n    text-align: center;\r\n    color: #b5b5b5;\r\n    margin-top: 50px;\r\n\r\n    .icon {\r\n      font-size: 79pt;\r\n      opacity: 0.3;\r\n      display: block;\r\n      margin: auto;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n\r\n  .total-caught {\r\n    display: block;\r\n    border-radius: 20px;\r\n    background: white;\r\n    box-shadow: 1px 1px 60px 0px #00000017;\r\n    margin: 10px;\r\n    max-width: 350px;\r\n    transition: 0.3s;\r\n    border: 1px solid #d4d4d4;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nconst MyPokemons = (props: RouteConfigComponentProps) => {\r\n  const { myPokemons, clearPokemons } = React.useContext(MyPokemonContext);\r\n  const { route } = props;\r\n\r\n  function renderPokemons() {\r\n    if (myPokemons.length === 0)\r\n      return (\r\n        <div data-testid=\"my-pokemons-empty\" className=\"empty\">\r\n          <div>Empty</div>\r\n          <MDIcon className=\"icon\" icon=\"pokeball\" />\r\n        </div>\r\n      );\r\n\r\n    return (\r\n      <div className=\"card-wrapper\">\r\n        {myPokemons.map((d, i) => (\r\n          <PokemonCard key={i} data={d} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <BaseRoute>\r\n      <CustomAppBar\r\n        component={\r\n          <IconButton\r\n            data-testid=\"clear-my-pokemons\"\r\n            onClick={() => {\r\n              if (clearPokemons) clearPokemons();\r\n            }}\r\n          >\r\n            <MDIcon icon=\"eraser-variant\" />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <Container>\r\n        <div className=\"total-caught\">\r\n          Total pokemon caught: {myPokemons.length}\r\n        </div>\r\n        {renderPokemons()}\r\n        {route?.routes && renderRoutes(route.routes)}\r\n      </Container>\r\n    </BaseRoute>\r\n  );\r\n};\r\n\r\nexport default MyPokemons;\r\n"],"sourceRoot":""}